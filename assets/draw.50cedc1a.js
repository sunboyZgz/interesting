var l=Object.defineProperty;var d=(h,t,i)=>t in h?l(h,t,{enumerable:!0,configurable:!0,writable:!0,value:i}):h[t]=i;var s=(h,t,i)=>(d(h,typeof t!="symbol"?t+"":t,i),i);class g{constructor(t){s(this,"el");s(this,"ctx");s(this,"width");s(this,"height");s(this,"degree_y");const i=t.clientWidth,e=t.clientWidth;t.width=i,t.height=e,this.el=t,this.ctx=t.getContext("2d"),this.width=i,this.height=e,this.degree_y=0}mirror_coordinate(){this.el.style.transformOrigin="center",this.el.style.transform="translate(-50%, -50%) scale(1,-1)"}translate_origin(t){typeof t=="string"?(t=x(t,this),a(t,this.ctx)):a(t,this.ctx)}draw_point(t){this.ctx.beginPath(),this.ctx.fillStyle="#000",this.ctx.arc(t[0],t[1],1,0,2*Math.PI),this.ctx.fill(),this.ctx.closePath()}draw_line(t,i){this.ctx.beginPath(),this.ctx.moveTo(t[0],t[1]),this.ctx.lineTo(i[0],i[1]),this.ctx.stroke(),this.ctx.closePath()}draw_vector_order(t){for(let i=0;i<t.length;i++){const e=(i+1)%t.length;this.draw_line(t[i],t[e])}}draw_x(){this.draw_line(r(-this.width/2,0),r(this.width/2,0))}draw_z(){this.draw_line(r(0,-this.height/2),r(0,this.height/2))}draw_y(t){const i=t&&(this.degree_y=-t)&&this.degree_y||this.degree_y;let e,n;o(i)?(e=this.width/2,n=this.width/2*Math.tan(i/180*Math.PI)):(n=this.height/2,e=this.height/2/Math.tan(i/180*Math.PI)),this.draw_line(r(-e,-n),r(e,n))}clear_ctx(){this.ctx.clearRect(-this.width,-this.height,this.width*2,this.height*2)}}function c(h,t){return h=h%360,Math.abs(Math.abs(h)-t)}function o(h){return c(h,0)<=45||c(h,180)<=45}function r(h,t){return[h,t]}function x(h,t){const i=t.el.width,e=t.el.height;switch(h){case"center":return{x:i/2,y:e/2};default:return{x:0,y:0}}}function a(h,t){t.translate(h.x,h.y)}export{g as D};
