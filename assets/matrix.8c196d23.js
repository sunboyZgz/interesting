function i(t){const e=t.length;if(e<1)return[];const o=t[0].length,n=new Array(o);for(let r=0;r<o;r++){const s=[];for(let l=0;l<e;l++)s.push(t[l][r]);n[r]=s}return n}function h(t,e){if(t.length==0||e.length==0){console.error("m1 m2 need at least one row");return}const o=t.length,n=t[0].length,r=e.length,s=e[0].length;if(n!=r){console.error("the column of m1 must equal with the row of m2");return}let l=new Array(o).fill(0);l=l.map(c=>new Array(s).fill(0));const a=i(e);for(let c=0;c<o;c++)for(let u=0;u<s;u++)console.log(c,u),l[c][u]=f(t[c],a[u]);return l}function f(t,e){const o=t.length;let n=0;for(let r=0;r<o;r++)n+=t[r]*e[r];return n}function w(t,e){const o=t.length;if(e.length==0||e.length==0){console.error("the column of vector must be the same as the row of");return}const n=new Array(o);for(let r=0;r<o;r++)n[r]=e[r].reduce((s,l,a)=>s+t[a]*l,0);return n}function g(t){return t[3]==0?(console.error("we need a point for translate"),[]):(t[3]!=1&&t.forEach((o,n)=>{t[n]/=t[3]}),[[1,0,0,t[0]],[0,1,0,t[1]],[0,0,1,t[2]],[0,0,0,1]])}export{h as a,g,i as m,w as r};
